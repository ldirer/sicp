
(define (make-split element others) (list 'split element others))
(define (split-element split) (cadr split))
(define (split-others split) (caddr split))
(define (split-last-item items)
  (cond ((null? items) (error "expected a non-empty list"))
    ((null? (cdr items)) (make-split (car items) (list)))
    ; wow this is ugly :)
    (else (let ((recursed (split-last-item (cdr items))))
            (make-split (split-element recursed) (cons (car items) (split-others recursed)))
            )
      )
    )
  )
